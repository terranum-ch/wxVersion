# SCRIPT FOR BUILDING WXHGVERSION
SET(WXHGVERSION_NAME "wxhgversion")

#OPTIONS - PARAMETERS 
SET(USE_WXHGVERSION 1 CACHE BOOL "Use component ${WXHGVERSION_NAME}")
IF (USE_WXHGVERSION)
    SET(WXHGVERSION_ENABLED 1)
    SET(WXHGVERSION_SOFT_NAME ${CMAKE_PROJECT_NAME})

    # GET WXWIDGETS VERSION
    #SET(wxWIDGETS_USING_SVN 0 CACHE BOOL "Using latest version of wxWidgets from SVN")
    #IF(wxWIDGETS_USING_SVN)
    IF (wxWIDGETS_PATH_SVN)
        #SET(wxWIDGETS_PATH_SVN 0 CACHE PATH "Path to the SVN version of wxWidgets from")
        EXECUTE_PROCESS(COMMAND "svnversion" -n
                WORKING_DIRECTORY ${wxWIDGETS_PATH_SVN}
                TIMEOUT 20
                OUTPUT_VARIABLE WXHGVERSION_WXWIDGETS_SVN
                ERROR_VARIABLE MY_ERROR2)
        IF (MY_ERROR2)
            MESSAGE(FATAL_ERROR "myError2 : ${MY_ERROR2}")
        ENDIF (MY_ERROR2)
        MESSAGE("wxWidgets version: ${WXHGVERSION_WXWIDGETS_SVN}")
        #ENDIF(wxWIDGETS_USING_SVN)
    ENDIF (wxWIDGETS_PATH_SVN)

    SET(WXHGVERSION_SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/..")
    SET(WXHGVERSION_SOFT_DIR "${PROJECT_SOURCE_DIR}")

    # GET MERCURIAL VERSION (SOFTWARE)
    EXECUTE_PROCESS(COMMAND "hg" id -q
            WORKING_DIRECTORY ${WXHGVERSION_SOFT_DIR}
            TIMEOUT 20
            OUTPUT_VARIABLE WXHGVERSION_SOFT_TEXT
            ERROR_VARIABLE MY_ERROR1)
    IF (MY_ERROR1)
        MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
    ENDIF (MY_ERROR1)
    STRING(STRIP "${WXHGVERSION_SOFT_TEXT}" WXHGVERSION_SOFT_TEXT)
    MESSAGE("${WXHGVERSION_SOFT_NAME} version: ${WXHGVERSION_SOFT_TEXT}")

    # GET BRANCH NAME (SOFTWARE)
    EXECUTE_PROCESS(COMMAND "hg" id -b
            WORKING_DIRECTORY ${WXHGVERSION_SOFT_DIR}
            TIMEOUT 20
            OUTPUT_VARIABLE WXHGVERSION_SOFT_BRANCH
            ERROR_VARIABLE MY_ERROR1)
    IF (MY_ERROR1)
        MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
    ENDIF (MY_ERROR1)
    STRING(STRIP "${WXHGVERSION_SOFT_BRANCH}" WXHGVERSION_SOFT_BRANCH)
    MESSAGE("${WXHGVERSION_SOFT_NAME} branch: ${WXHGVERSION_SOFT_BRANCH}")

    # GET MERCURIAL NUMBER (SOFTWARE)
    EXECUTE_PROCESS(COMMAND "hg" id -n
            WORKING_DIRECTORY ${WXHGVERSION_SOFT_DIR}
            TIMEOUT 20
            OUTPUT_VARIABLE WXHGVERSION_SOFT_NUMBER
            ERROR_VARIABLE MY_ERROR1)
    IF (MY_ERROR1)
        MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
    ENDIF (MY_ERROR1)
    STRING(STRIP "${WXHGVERSION_SOFT_NUMBER}" WXHGVERSION_SOFT_NUMBER)
    MESSAGE("${WXHGVERSION_SOFT_NAME} version number: ${WXHGVERSION_SOFT_NUMBER}")

    # GET MERCURIAL VERSION (WXHGVERSION)
    EXECUTE_PROCESS(COMMAND "hg" id -q
            WORKING_DIRECTORY ${WXHGVERSION_SOURCE_DIR}
            TIMEOUT 20
            OUTPUT_VARIABLE WXHGVERSION_TEXT
            ERROR_VARIABLE MY_ERROR1)
    IF (MY_ERROR1)
        MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
    ENDIF (MY_ERROR1)
    STRING(STRIP "${WXHGVERSION_TEXT}" WXHGVERSION_TEXT)
    MESSAGE("${WXHGVERSION_NAME} version: ${WXHGVERSION_TEXT}")

    # GET BRANCH NAME (WXHGVERSION)
    EXECUTE_PROCESS(COMMAND "hg" id -b
            WORKING_DIRECTORY ${WXHGVERSION_SOURCE_DIR}
            TIMEOUT 20
            OUTPUT_VARIABLE WXHGVERSION_BRANCH
            ERROR_VARIABLE MY_ERROR1)
    IF (MY_ERROR1)
        MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
    ENDIF (MY_ERROR1)
    STRING(STRIP "${WXHGVERSION_BRANCH}" WXHGVERSION_BRANCH)
    MESSAGE("${WXHGVERSION_NAME} branch: ${WXHGVERSION_BRANCH}")

    # GET MERCURIAL NUMBER (WXHGVERSION)
    EXECUTE_PROCESS(COMMAND "hg" id -n
            WORKING_DIRECTORY ${WXHGVERSION_SOURCE_DIR}
            TIMEOUT 20
            OUTPUT_VARIABLE WXHGVERSION_NUMBER
            ERROR_VARIABLE MY_ERROR1)
    IF (MY_ERROR1)
        MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
    ENDIF (MY_ERROR1)
    STRING(STRIP "${WXHGVERSION_NUMBER}" WXHGVERSION_NUMBER)
    MESSAGE("${WXHGVERSION_NAME} version number: ${WXHGVERSION_NUMBER}")

    # VROOMGIS MERCURIAL VERSION
    IF (VROOMGIS_PATH)
        # GET MERCURIAL VERSION (VROOMGIS)
        EXECUTE_PROCESS(COMMAND "hg" id -q
                WORKING_DIRECTORY ${VROOMGIS_PATH}
                TIMEOUT 20
                OUTPUT_VARIABLE VROOMGIS_TEXT
                ERROR_VARIABLE MY_ERROR1)
        IF (MY_ERROR1)
            MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
        ENDIF (MY_ERROR1)
        STRING(STRIP "${VROOMGIS_TEXT}" VROOMGIS_TEXT)
        MESSAGE("VroomGIS version: ${VROOMGIS_TEXT}")

        # GET BRANCH NAME (VROOMGIS)
        EXECUTE_PROCESS(COMMAND "hg" id -b
                WORKING_DIRECTORY ${VROOMGIS_PATH}
                TIMEOUT 20
                OUTPUT_VARIABLE VROOMGIS_BRANCH
                ERROR_VARIABLE MY_ERROR1)
        IF (MY_ERROR1)
            MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
        ENDIF (MY_ERROR1)
        STRING(STRIP "${VROOMGIS_BRANCH}" VROOMGIS_BRANCH)
        MESSAGE("vroomGIS branch: ${VROOMGIS_BRANCH}")

        # GET MERCURIAL NUMBER (VROOMGIS)
        EXECUTE_PROCESS(COMMAND "hg" id -n
                WORKING_DIRECTORY ${VROOMGIS_PATH}
                TIMEOUT 20
                OUTPUT_VARIABLE VROOMGIS_NUMBER
                ERROR_VARIABLE MY_ERROR1)
        IF (MY_ERROR1)
            MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
        ENDIF (MY_ERROR1)
        STRING(STRIP "${VROOMGIS_NUMBER}" VROOMGIS_NUMBER)
        MESSAGE("vroomGIS version number: ${VROOMGIS_NUMBER}")
    ENDIF (VROOMGIS_PATH)

    CONFIGURE_FILE("${WXHGVERSION_SOURCE_DIR}/src/wxhgversion_param.h.in" "${PROJECT_BINARY_DIR}/wxhgversion_param.h")
    INCLUDE_DIRECTORIES("${WXHGVERSION_SOURCE_DIR}/src/")
    INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")
    MESSAGE(${PROJECT_BINARY_DIR})

    #
    # CREATE LIBRARY
    #
    FILE(GLOB WXHGVERSION_SRC_FILES "${WXHGVERSION_SOURCE_DIR}/src/*.cpp")
    SOURCE_GROUP(source FILES ${WXHGVERSION_SRC_FILES})
    FILE(GLOB WXHGVERSION_HEAD_FILES "${WXHGVERSION_SOURCE_DIR}/src/*.h")
    SOURCE_GROUP(header FILES ${WXHGVERSION_HEAD_FILES})
    ADD_LIBRARY("wxhgversion" STATIC ${WXHGVERSION_SRC_FILES} ${WXHGVERSION_HEAD_FILES})

ELSE (USE_WXHGVERSION)
    MESSAGE("Not using wxhgversion Component")
ENDIF (USE_WXHGVERSION)


