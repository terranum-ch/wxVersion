# SCRIPT FOR BUILDING WXHGVERSION
SET(WXHGVERSION_NAME "wxhgversion")

#OPTIONS - PARAMETERS 
SET(USE_WXHGVERSION 1 CACHE BOOL "Use component ${WXHGVERSION_NAME}")
IF(USE_WXHGVERSION)
  SET(WXHGVERSION_ENABLED 1)
  SET(WXHGVERSION_SOFT_NAME ${CMAKE_PROJECT_NAME})	

  # GET WXWIDGETS VERSION  
	SET(wxWIDGETS_USING_SVN 0 CACHE BOOL "Using latest version of wxWidgets from SVN")
	IF(wxWIDGETS_USING_SVN)
		SET(wxWIDGETS_PATH_SVN 0 CACHE PATH "Path to the SVN version of wxWidgets from")	
		EXECUTE_PROCESS(COMMAND "svnversion" -n
		WORKING_DIRECTORY ${wxWIDGETS_PATH_SVN}
		TIMEOUT 20
    OUTPUT_VARIABLE WXHGVERSION_WXWIDGETS_SVN
		ERROR_VARIABLE MY_ERROR2)
		IF(MY_ERROR2)
			MESSAGE(FATAL_ERROR "myError2 : ${MY_ERROR2}")
		ENDIF(MY_ERROR2)
		MESSAGE("wxWidgets version: ${WXHGVERSION_WXWIDGETS_SVN}")
	ENDIF(wxWIDGETS_USING_SVN)

  SET(WXHGVERSION_SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/..")
		
  # GET MERCURIAL VERSION
  MESSAGE(${WXHGVERSION_SOURCE_DIR})
	EXECUTE_PROCESS(COMMAND "hg" id -q
	WORKING_DIRECTORY ${WXHGVERSION_SOURCE_DIR}
	TIMEOUT 20
  OUTPUT_VARIABLE WXHGVERSION_TEXT
	ERROR_VARIABLE MY_ERROR1)
	IF(MY_ERROR1)
		MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
	ENDIF(MY_ERROR1)
  STRING(STRIP ${WXHGVERSION_TEXT} WXHGVERSION_TEXT)
  MESSAGE("${WXHGVERSION_SOFT_NAME} version: ${WXHGVERSION_TEXT}")

  # GET BRANCH NAME
  EXECUTE_PROCESS(COMMAND "hg" id -b
	WORKING_DIRECTORY ${WXHGVERSION_SOURCE_DIR}
	TIMEOUT 20
  OUTPUT_VARIABLE WXHGVERSION_BRANCH
	ERROR_VARIABLE MY_ERROR1)
	IF(MY_ERROR1)
		MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
	ENDIF(MY_ERROR1)
  STRING(STRIP ${WXHGVERSION_BRANCH} WXHGVERSION_BRANCH)
	MESSAGE("${WXHGVERSION_SOFT_NAME} branch: ${WXHGVERSION_BRANCH}")

  # GET MERCURIAL NUMBER
  EXECUTE_PROCESS(COMMAND "hg" id -n
	WORKING_DIRECTORY ${WXHGVERSION_SOURCE_DIR}
	TIMEOUT 20
  OUTPUT_VARIABLE WXHGVERSION_NUMBER
	ERROR_VARIABLE MY_ERROR1)
	IF(MY_ERROR1)
		MESSAGE(FATAL_ERROR "myError1 : ${MY_ERROR1}")
	ENDIF(MY_ERROR1)
  STRING(STRIP ${WXHGVERSION_NUMBER} WXHGVERSION_NUMBER)
  MESSAGE("${WXHGVERSION_SOFT_NAME} version number: ${WXHGVERSION_NUMBER}")

  CONFIGURE_FILE("${WXHGVERSION_SOURCE_DIR}/src/wxhgversion_param.h.in" "${PROJECT_BINARY_DIR}/wxhgversion_param.h")
  INCLUDE_DIRECTORIES("${WXHGVERSION_SOURCE_DIR}/src/")
	
  #
  # CREATE LIBRARY 
	# 
  FILE (GLOB WXHGVERSION_SRC_FILES "${WXHGVERSION_SOURCE_DIR}/src/*.cpp")
  SOURCE_GROUP(source FILES ${WXHGVERSION_SRC_FILES})
  FILE (GLOB WXHGVERSION_HEAD_FILES "${WXHGVERSION_SOURCE_DIR}/src/*.h")
	SOURCE_GROUP(header FILES ${WXHGVERSION_HEAD_FILES})
  ADD_LIBRARY("wxhgversion" STATIC ${WXHGVERSION_SRC_FILES} ${WXHGVERSION_HEAD_FILES})

ELSE(USE_WXHGVERSION)
	MESSAGE( "Not using wxhgversion Component")
ENDIF(USE_WXHGVERSION)


