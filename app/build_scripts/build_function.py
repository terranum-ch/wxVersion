#!/usr/bin/env python# encoding: utf-8"""build_function.pyCreated by Lucien Schreiber on 2013-05-14.Copyright (c) 2013 . All rights reserved."""import sysimport osimport subprocessimport errnoimport statimport shutil# Found here: http://stackoverflow.com/questions/1213706/what-user-do-python-scripts-run-as-in-windows/1214935#1214935# change read only file to read write in order to delete themdef handleRemoveReadonly(func, path, exc):    excvalue = exc[1]    if func in (os.rmdir, os.remove) and excvalue.errno == errno.EACCES:        os.chmod(path, stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)  # 0777        func(path)    else:        raisedef GetSourceDirectory():    pathname = os.path.dirname(sys.argv[0])    return os.path.normpath(os.path.join(pathname, "..", ".."))def GetBinaryDirectory():    return os.path.normpath(os.path.join(GetSourceDirectory(), "..", "bin"))def ClearDirectory():    try:        shutil.rmtree(GetBinaryDirectory(), ignore_errors=False, onerror=handleRemoveReadonly)    except:        print("Removing directory failed :", GetBinaryDirectory())    try:        os.mkdir(GetBinaryDirectory())    except:        print("Unable to create:", GetBinaryDirectory())def UpdateMercurial():    try:        print (GetSourceDirectory())        p = subprocess.Popen("hg pull", shell=True, cwd=GetSourceDirectory())        p.wait()    except:        print ("Error pulling data")        exit()    print ("Pulling data from Server OK!")    try:        p = subprocess.Popen("hg update", shell=True, cwd=GetSourceDirectory())        p.wait()    except:        print("Error updating data")        exit()    print ("Updating data OK")if __name__ == '__main__':    pass